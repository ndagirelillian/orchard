# Generated by Django 5.1.5 on 2025-05-29 19:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Product Name')),
                ('stock_status', models.CharField(choices=[('in_stock', 'In Stock'), ('low', 'Low Stock'), ('out', 'Out of Stock')], default='in_stock', max_length=20, verbose_name='Stock Status')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IssuedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_taken', models.PositiveIntegerField()),
                ('units', models.CharField(blank=True, choices=[('Kilogram(es)', 'Kilogram(es)'), ('Box(es)', 'Box(es)'), ('Litre(s)', 'Litre(s)'), ('Gram(s)', 'Gram(s)'), ('Packet(s)', 'Packet(s)'), ('Piece(s)', 'Piece(s)'), ('Dozen(s)', 'Dozen(s)'), ('Carton(s)', 'Carton(s)'), ('Can(s)', 'Can(s)'), ('Crate(s)', 'Crate(s)'), ('Bag(s)', 'Bag(s)'), ('Bottle(s)', 'Bottle(s)'), ('Jar(s)', 'Jar(s)'), ('Bar(s)', 'Bar(s)'), ('Cup(s)', 'Cup(s)'), ('Tray(s)', 'Tray(s)'), ('Slice(s)', 'Slice(s)'), ('Roll(s)', 'Roll(s)'), ('Bundle(s)', 'Bundle(s)'), ('Tin(s)', 'Tin(s)'), ('Pint(s)', 'Pint(s)'), ('Gallon(s)', 'Gallon(s)'), ('Ounce(s)', 'Ounce(s)'), ('Millilitre(s)', 'Millilitre(s)'), ('Drop(s)', 'Drop(s)'), ('Clove(s)', 'Clove(s)'), ('Bunch(es)', 'Bunch(es)'), ('Stick(s)', 'Stick(s)'), ('Cup(s)', 'Cup(s)')], max_length=50, null=True)),
                ('date_taken', models.DateTimeField(auto_now_add=True)),
                ('person_receiving', models.CharField(max_length=100)),
                ('reason_for_issue', models.TextField(blank=True, null=True)),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_items', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_info', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='store.category')),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('units', models.CharField(blank=True, choices=[('Kilogram(es)', 'Kilogram(es)'), ('Box(es)', 'Box(es)'), ('Litre(s)', 'Litre(s)'), ('Gram(s)', 'Gram(s)'), ('Packet(s)', 'Packet(s)'), ('Piece(s)', 'Piece(s)'), ('Dozen(s)', 'Dozen(s)'), ('Carton(s)', 'Carton(s)'), ('Can(s)', 'Can(s)'), ('Crate(s)', 'Crate(s)'), ('Bag(s)', 'Bag(s)'), ('Bottle(s)', 'Bottle(s)'), ('Jar(s)', 'Jar(s)'), ('Bar(s)', 'Bar(s)'), ('Cup(s)', 'Cup(s)'), ('Tray(s)', 'Tray(s)'), ('Slice(s)', 'Slice(s)'), ('Roll(s)', 'Roll(s)'), ('Bundle(s)', 'Bundle(s)'), ('Tin(s)', 'Tin(s)'), ('Pint(s)', 'Pint(s)'), ('Gallon(s)', 'Gallon(s)'), ('Ounce(s)', 'Ounce(s)'), ('Millilitre(s)', 'Millilitre(s)'), ('Drop(s)', 'Drop(s)'), ('Clove(s)', 'Clove(s)'), ('Bunch(es)', 'Bunch(es)'), ('Stick(s)', 'Stick(s)'), ('Cup(s)', 'Cup(s)')], max_length=50, null=True)),
                ('cost_per_item', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('expiry_date', models.DateField()),
                ('date_received', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='store.product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batches', to='store.supplier')),
            ],
            options={
                'ordering': ['-date_received'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock_status'], name='store_produ_stock_s_c05b77_idx'),
        ),
    ]
